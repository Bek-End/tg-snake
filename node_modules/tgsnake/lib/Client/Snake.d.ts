import { TelegramClient } from 'telegram';
import { Telegram } from '../Telegram';
import { MainContext } from '../Context/MainContext';
import { Options } from '../Interface/Options';
import { InterfaceSnakeEvent } from '../Events';
export declare class Snake<T = {}> extends MainContext<T> {
    /** @hidden */
    private _client;
    /** @hidden */
    private _telegram;
    /** @hidden */
    private _version;
    /** @hidden */
    private _connectTime;
    /** @hidden */
    private _freshStore;
    /** @hidden */
    private intervalCT;
    constructor(options?: Options);
    get telegram(): Telegram;
    get client(): TelegramClient;
    get version(): string;
    get logger(): string;
    get connectTime(): string;
    restart(): Promise<string>;
    /** @hidden */
    private _createSession;
    /** @hidden */
    private _start;
    /** @hidden */
    _createClient(): Promise<this>;
    connect(): Promise<this>;
    disconnect(): Promise<this>;
    run(params?: InterfaceSnakeEvent): Promise<this>;
    start(): Promise<this>;
    save(): Promise<string>;
    generateSession(): Promise<this>;
}
