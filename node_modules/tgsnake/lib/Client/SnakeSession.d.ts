import { MemorySession } from 'telegram/sessions/Memory';
import { AuthKey } from 'telegram/crypto/AuthKey';
import bigInt from 'big-integer';
import { Snake } from './Snake';
export interface InterfaceSnakeSession {
    authKey: any;
    dcId: number;
    port: number;
    serverAddress: string;
    entities: Array<any>;
}
export declare class SnakeSession extends MemorySession {
    /** @hidden */
    private _sessionName;
    /** @hidden */
    private client;
    constructor(sessionName: string, client: Snake);
    load(): Promise<void>;
    setDC(dcId: number, serverAddress: string, port: number): void;
    get authKey(): AuthKey | undefined;
    set authKey(value: AuthKey | undefined);
    getEntityRowsById(id: string | bigInt.BigInteger, exact?: boolean): (string | undefined)[];
    save(): string;
}
