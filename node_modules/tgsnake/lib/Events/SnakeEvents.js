"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnakeEvent = void 0;
const common_1 = require("telegram/events/common");
const GetEntity_1 = require("../Telegram/Users/GetEntity");
class SnakeEvent extends common_1.EventBuilder {
    constructor(SnakeClient, eventParams) {
        let { chats, blacklistChats, func } = eventParams;
        super({ chats, blacklistChats, func });
        this._SnakeClient = SnakeClient;
    }
    async build(update, callback, selfId) {
        //@ts-ignore
        if (update._entities && update._entities.size) {
            //@ts-ignore
            for (let [key, value] of update._entities.entries()) {
                let entities = new GetEntity_1.ResultGetEntity();
                await entities.init(value, this._SnakeClient);
                this._SnakeClient.log.debug(`Add or Update Entities (${entities.id}) to cache.`);
                this._SnakeClient.entityCache.set(entities.id, entities);
                if (entities.username)
                    this._SnakeClient.entityCache.set(entities.username, entities);
            }
        }
        return update;
    }
}
exports.SnakeEvent = SnakeEvent;
