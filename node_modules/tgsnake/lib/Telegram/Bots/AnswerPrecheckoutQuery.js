"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnswerPrecheckoutQuery = void 0;
const telegram_1 = require("telegram");
const big_integer_1 = __importDefault(require("big-integer"));
const Error_1 = __importDefault(require("../../Context/Error"));
async function AnswerPrecheckoutQuery(snakeClient, id, ok, error) {
    try {
        return await snakeClient.client.invoke(new telegram_1.Api.messages.SetBotPrecheckoutResults({
            success: ok,
            queryId: (0, big_integer_1.default)(String(id)),
            error: error,
        }));
    }
    catch (error) {
        snakeClient.log.error('Failed running telegram.answerPrecheckoutQuery');
        throw new Error_1.default(error.message, 'telegram.answerPrecheckoutQuery', `${id},${ok}${error ? `,${error}` : ''}`);
    }
}
exports.AnswerPrecheckoutQuery = AnswerPrecheckoutQuery;
