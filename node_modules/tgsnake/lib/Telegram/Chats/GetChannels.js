"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetChannels = void 0;
const telegram_1 = require("telegram");
const Error_1 = __importDefault(require("../../Context/Error"));
const big_integer_1 = __importDefault(require("big-integer"));
/**
 * Get info about channels/supergroups.
 * @param snakeClient - Client
 * @param {Array} chatId - List of channel ids.
 * ```ts
 * bot.command("getChannels",async (ctx) => {
 *     let results = await ctx.telegram.getChannels([ctx.chat.id])
 *     console.log(results)
 * })
 * ```
 */
async function GetChannels(snakeClient, chatId) {
    try {
        snakeClient.log.debug('Running telegram.GetChannels');
        let id = [];
        for (let ids of chatId) {
            if (typeof ids == 'string') {
                //@ts-ignore
                id.push(ids);
            }
            if (typeof ids == 'bigint') {
                //@ts-ignore
                id.push((0, big_integer_1.default)(ids));
            }
            if (typeof ids == 'number') {
                snakeClient.log.warning('Type of chatId is number, please switch to BigInt or String for security Ids 64 bit int.');
                //@ts-ignore
                id.push((0, big_integer_1.default)(ids));
            }
        }
        let results = await snakeClient.client.invoke(new telegram_1.Api.channels.GetChannels({
            id: id,
        }));
        //todo
        //change the json results.
        return results;
    }
    catch (error) {
        snakeClient.log.error('Failed to running telegram.getChannels');
        throw new Error_1.default(error.message, 'telegram.getChannels', `${chatId}`);
    }
}
exports.GetChannels = GetChannels;
