"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetLeftChannels = void 0;
const telegram_1 = require("telegram");
const Error_1 = __importDefault(require("../../Context/Error"));
/**
 * Get a list of channels/supergroups we left.
 * @param snakeClient - Client.
 * @param {number} offset - offset of pagination.
 * ```ts
 * bot.command("getLeftChannels",async (ctx) => {
 *     let results = await ctx.telegram.getLeftChannels()
 *     console.log(results)
 * })
 * ```
 */
async function GetLeftChannels(snakeClient, offset = 0) {
    try {
        snakeClient.log.debug('Running telegram.getLeftChannels');
        return await snakeClient.client.invoke(new telegram_1.Api.channels.GetLeftChannels({
            offset: offset,
        }));
    }
    catch (error) {
        snakeClient.log.error('Failed to running telegram.getLeftChannels');
        throw new Error_1.default(error.message, 'telegram.getLeftChannels', `${offset}`);
    }
}
exports.GetLeftChannels = GetLeftChannels;
