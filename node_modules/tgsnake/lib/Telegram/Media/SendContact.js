"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendContact = void 0;
const telegram_1 = require("telegram");
const SendMedia_1 = require("./SendMedia");
const Error_1 = __importDefault(require("../../Context/Error"));
/**
 * Sending Contact
 * @param snakeClient - Client
 * @param {string|number|bigint} chatId - Chat/Groups/Channel id.
 * @param {Object} contact - contact.
 * @param {Object} more - more parameters to use.
 * ```ts
 * bot.command("contact",async (ctx) => {
 *     let results = await ctx.telegram.sendContact(ctx.chat.id,{
 *    firstName : "someone",
 *    lastName : "",
 *    phoneNumber : "1234567890",
 *    vcard : "something info"
 *  })
 * })
 * ```
 */
async function SendContact(snakeClient, chatId, contact, more) {
    var _a;
    try {
        snakeClient.log.debug('Running telegram.sendContact');
        if (typeof chatId === 'number')
            snakeClient.log.warning('Type of chatId is number, please switch to BigInt or String for security Ids 64 bit int.');
        //@ts-ignore
        let emoji = typeof dice == 'string' ? dice : dice.emoji;
        return await (0, SendMedia_1.SendMedia)(snakeClient, chatId, new telegram_1.Api.InputMediaContact({
            firstName: contact.firstName,
            lastName: (_a = contact.lastName) !== null && _a !== void 0 ? _a : '',
            phoneNumber: contact.phoneNumber,
            vcard: contact.vcard,
        }), more);
    }
    catch (error) {
        snakeClient.log.error('Failed to running telegram.sendContact');
        throw new Error_1.default(error.message, 'telegram.sendContact', `${chatId},${JSON.stringify(contact)}${more ? ',' + JSON.stringify(more) : ''}`);
    }
}
exports.SendContact = SendContact;
