import { Snake } from '../../Client';
import { defaultSendMediaMoreParams } from './SendMedia';
export interface InvoicePricesLabel {
    amount: bigint;
    label: string;
}
export interface sendInvoiceParams {
    description: string;
    currency: string;
    payload: string;
    provider: string;
    title: string;
    prices: Array<InvoicePricesLabel>;
    providerData?: any | string;
    test?: boolean;
    startParam?: string;
    photoUrl?: string;
    photoSize?: number;
    photoMimeType?: string;
    photoHight?: number;
    photoWidth?: number;
    nameRequested?: boolean;
    phoneRequested?: boolean;
    emailRequested?: boolean;
    shippingAddressRequested?: boolean;
    flexible?: boolean;
    phoneToProvider?: boolean;
    emailToProvider?: boolean;
    maxTipAmount?: bigint;
    suggestedTipAmounts?: Array<bigint>;
}
/**
 * Sending invoice (payment).
 * @param snakeClient {Object} - Client.
 * @param chatId {String|Number|BigInt} - target chat.
 * @param invoice {Object} - Invoice will be sending.
 * @param more {Object} - More parameter will be using to sending invoice.
 * ```ts
 * bot.command("invoice",(ctx)=>{
 *   return ctx.telegram.sendInvoice(ctx.chat.id,{
 *      test : true,
 *      currency : "usd",
 *      payload : "some payload here.",
 *      provider : "",
 *      title : "testing",
 *      description : "just testing lol. xD",
 *      prices : [{
 *          amount : 1000n,
 *          label : "1"
 *      }]
 *   })
 * })
 * ```
 */
export declare function SendInvoice(snakeClient: Snake, chatId: number | string | bigint, invoice: sendInvoiceParams, more?: defaultSendMediaMoreParams): Promise<import("../../Update").UpdateShortSentMessage | import("../../Update").UpdateNewMessage | import("../../Update").UpdateNewChannelMessage | undefined>;
