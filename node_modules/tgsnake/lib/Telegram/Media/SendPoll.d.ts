import { Snake } from '../../Client';
import { defaultSendMediaMoreParams } from './SendMedia';
import * as Medias from '../../Utils/Medias';
import { Entities } from '@tgsnake/parser';
export interface sendPollMoreParams extends defaultSendMediaMoreParams {
    closed?: boolean;
    publicVoters?: boolean;
    multipleChoice?: boolean;
    quiz?: boolean;
    closePeriod?: number;
    closeDate?: number;
    correctAnswers?: number;
    solution?: string;
    solutionEntities?: Entities[];
    solutionParseMode?: string;
}
export interface InterfacePoll {
    question: string;
    options: Array<string>;
}
/**
 * Sending Polling
 * @param snakeClient - Client
 * @param {string|number|bigint} chatId - Chat/Groups/Channel id.
 * @param {Object} poll - polling
 * @param {Object} more - more parameters to use.
 * ```ts
 * bot.command("poll",async (ctx) => {
 *     let results = await ctx.telegram.sendPoll(ctx.chat.id,{
 *    question : "something"
 *    options : ["A","B"],
 *  })
 * })
 * ```
 */
export declare function SendPoll(snakeClient: Snake, chatId: number | string | bigint, poll: InterfacePoll | Medias.MediaPoll, more?: sendPollMoreParams): Promise<import("../../Update").UpdateShortSentMessage | import("../../Update").UpdateNewMessage | import("../../Update").UpdateNewChannelMessage | undefined>;
