"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnpinAllMessages = void 0;
const telegram_1 = require("telegram");
const DeleteMessages_1 = require("./DeleteMessages");
const ToBigInt_1 = require("../../Utils/ToBigInt");
const Error_1 = __importDefault(require("../../Context/Error"));
/**
 * Unpin all message in chats.
 * @param snakeClient - Client
 * @param {string|number|bigint} chatId - Chat/Groups/Channel id.
 * ```ts
 * bot.command("unpinAll",async (ctx)=>{
 *     let results = await ctx.telegram.unpinAllMessages(ctx.chat.id)
 *     console.log(results)
 * })
 * ```
 */
async function UnpinAllMessages(snakeClient, chatId) {
    try {
        snakeClient.log.debug('Running telegram.unpinAllMessages');
        if (typeof chatId === 'number')
            snakeClient.log.warning('Type of chatId is number, please switch to BigInt or String for security Ids 64 bit int.');
        let [id, type, peer] = await (0, ToBigInt_1.toBigInt)(chatId, snakeClient);
        return new DeleteMessages_1.ResultAffectedMessages(await snakeClient.client.invoke(new telegram_1.Api.messages.UnpinAllMessages({
            peer: peer,
        })));
    }
    catch (error) {
        snakeClient.log.error('Failed to running telegram.unpinAllMessages');
        throw new Error_1.default(error.message, 'telegram.unpinAllMessages', `${chatId}`);
    }
}
exports.UnpinAllMessages = UnpinAllMessages;
