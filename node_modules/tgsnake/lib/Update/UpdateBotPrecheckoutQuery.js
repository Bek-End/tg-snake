"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateBotPrecheckoutQuery = void 0;
const From_1 = require("../Utils/From");
const Update_1 = require("./Update");
const Payment_1 = require("../Utils/Payment");
class UpdateBotPrecheckoutQuery extends Update_1.Update {
    constructor() {
        super();
        this['_'] = 'updateBotPrecheckoutQuery';
    }
    async init(update, SnakeClient) {
        SnakeClient.log.debug(`Creating ${this['_']}`);
        this.telegram = SnakeClient.telegram;
        this.id = BigInt(String(update.queryId));
        this.payload = update.payload.toString('utf8');
        this.currency = update.currency;
        this.totalAmount = BigInt(String(update.totalAmount));
        this.shippingOptionId = update.shippingOptionId;
        this.from = new From_1.From();
        if (update.info) {
            this.info = new Payment_1.PaymentRequestedInfo(update.info);
        }
        await this.from.init(BigInt(String(update.userId)), SnakeClient);
        return this;
    }
    async answer(ok, error) {
        return this.telegram.answerPrecheckoutQuery(this.id, ok, error);
    }
}
exports.UpdateBotPrecheckoutQuery = UpdateBotPrecheckoutQuery;
