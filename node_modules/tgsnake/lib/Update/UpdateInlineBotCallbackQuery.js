"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateInlineBotCallbackQuery = void 0;
const From_1 = require("../Utils/From");
const Update_1 = require("./Update");
const Util_1 = __importDefault(require("tg-file-id/dist/Util"));
const ToBigInt_1 = require("../Utils/ToBigInt");
class UpdateInlineBotCallbackQuery extends Update_1.Update {
    constructor() {
        super();
        this['_'] = 'updateInlineBotCallbackQuery';
    }
    async init(update, SnakeClient) {
        var _a;
        SnakeClient.log.debug(`Creating ${this['_']}`);
        this.telegram = SnakeClient.telegram;
        this.data = (_a = update.data) === null || _a === void 0 ? void 0 : _a.toString('utf8');
        this.id = BigInt((0, ToBigInt_1.toString)(update.queryId));
        this.gameShortName = update.gameShortName;
        this.chatInstance = BigInt((0, ToBigInt_1.toString)(update.chatInstance));
        this.inlineMessageId = '';
        this.inlineMessageId += Util_1.default.to32bitBuffer(update.msgId.dcId);
        let id = BigInt(String(update.msgId.id));
        let accessHash = BigInt(String(update.msgId.accessHash));
        this.inlineMessageId += Util_1.default.to64bitBuffer(accessHash);
        this.inlineMessageId += Util_1.default.to64bitBuffer(id);
        this.inlineMessageId = Util_1.default.base64UrlEncode(Util_1.default.rleEncode(this.inlineMessageId));
        this.from = new From_1.From();
        await this.from.init(BigInt((0, ToBigInt_1.toString)(update.userId)), SnakeClient);
        return this;
    }
}
exports.UpdateInlineBotCallbackQuery = UpdateInlineBotCallbackQuery;
