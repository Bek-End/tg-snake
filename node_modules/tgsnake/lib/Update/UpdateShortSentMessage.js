"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateShortSentMessage = void 0;
const Update_1 = require("./Update");
const telegram_1 = require("telegram");
const parser_1 = __importDefault(require("@tgsnake/parser"));
const Medias_1 = require("../Utils/Medias");
const MessageContext_1 = require("../Context/MessageContext");
const parser = new parser_1.default(telegram_1.Api);
class UpdateShortSentMessage extends Update_1.Update {
    constructor() {
        super();
        this['_'] = 'updateShortSentMessage';
    }
    async init(update, SnakeClient) {
        SnakeClient.log.debug(`Creating ${this['_']}`);
        this.message = new MessageContext_1.MessageContext();
        this.telegram = SnakeClient.telegram;
        this.message.out = update.out;
        this.message.id = update.id;
        this.message.date = update.date;
        this.message.ttlPeriod = update.ttlPeriod;
        if (update.media) {
            this.message.media = await (0, Medias_1.GenerateMedia)(update.media, SnakeClient);
        }
        if (update.entities) {
            this.message.entities = parser.fromRaw(update.entities);
        }
        this.message.SnakeClient = SnakeClient;
        return this;
    }
}
exports.UpdateShortSentMessage = UpdateShortSentMessage;
