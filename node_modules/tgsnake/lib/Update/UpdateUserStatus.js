"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateUserStatus = void 0;
const Update_1 = require("./Update");
const From_1 = require("../Utils/From");
const ToBigInt_1 = require("../Utils/ToBigInt");
class UpdateUserStatus extends Update_1.Update {
    constructor() {
        super();
        this['_'] = 'updateUserStatus';
    }
    async init(update, SnakeClient) {
        SnakeClient.log.debug(`Creating ${this['_']}`);
        this.telegram = SnakeClient.telegram;
        if (update.userId) {
            let user = new From_1.From();
            await user.init(BigInt((0, ToBigInt_1.toString)(update.userId)), SnakeClient);
            this.user = user;
        }
        if (update.status) {
            switch (update.status.className) {
                case 'UserStatusOnline':
                    this.status = 'online';
                    break;
                case 'UserStatusOffline':
                    this.status = 'offline';
                    break;
                case 'UserStatusRecently':
                    this.status = 'recently';
                    break;
                case 'UserStatusLastWeek':
                    this.status = 'withinWeek';
                    break;
                case 'UserStatusLastMonth':
                    this.status = 'withinMonth';
                    break;
                default:
                    this.status = 'longTimeAgo';
            }
        }
        return this;
    }
}
exports.UpdateUserStatus = UpdateUserStatus;
