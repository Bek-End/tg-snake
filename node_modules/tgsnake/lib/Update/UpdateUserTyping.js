"use strict";
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateUserTyping = void 0;
const telegram_1 = require("telegram");
const From_1 = require("../Utils/From");
const Update_1 = require("./Update");
const ToBigInt_1 = require("../Utils/ToBigInt");
class UpdateUserTyping extends Update_1.Update {
    constructor() {
        super();
        this['_'] = 'updateUserTyping';
    }
    async init(update, SnakeClient) {
        SnakeClient.log.debug(`Creating ${this['_']}`);
        this.telegram = SnakeClient.telegram;
        if (update.userId) {
            let user = new From_1.From();
            await user.init(BigInt((0, ToBigInt_1.toString)(update.userId)), SnakeClient);
            this.user = user;
        }
        if (update.action instanceof telegram_1.Api.SendMessageTypingAction) {
            this.action = 'typing';
        }
        if (update.action instanceof telegram_1.Api.SendMessageCancelAction) {
            this.action = 'cancel';
        }
        if (update.action instanceof telegram_1.Api.SendMessageRecordVideoAction) {
            this.action = 'recordVideo';
        }
        if (update.action instanceof telegram_1.Api.SendMessageUploadVideoAction) {
            update.action;
            this.action = 'uploadVideo';
            this.progress = update.action.progress;
        }
        if (update.action instanceof telegram_1.Api.SendMessageRecordAudioAction) {
            this.action = 'recordAudio';
        }
        if (update.action instanceof telegram_1.Api.SendMessageUploadAudioAction) {
            update.action;
            this.action = 'uploadAudio';
            this.progress = update.action.progress;
        }
        if (update.action instanceof telegram_1.Api.SendMessageUploadPhotoAction) {
            update.action;
            this.action = 'uploadPhoto';
            this.progress = update.action.progress;
        }
        if (update.action instanceof telegram_1.Api.SendMessageUploadDocumentAction) {
            update.action;
            this.action = 'uploadDocument';
            this.progress = update.action.progress;
        }
        if (update.action instanceof telegram_1.Api.SendMessageGeoLocationAction) {
            this.action = 'geoLocation';
        }
        if (update.action instanceof telegram_1.Api.SendMessageChooseContactAction) {
            this.action = 'chooseContact';
        }
        if (update.action instanceof telegram_1.Api.SendMessageGamePlayAction) {
            this.action = 'gamePlay';
        }
        if (update.action instanceof telegram_1.Api.SendMessageRecordRoundAction) {
            this.action = 'recordRound';
        }
        if (update.action instanceof telegram_1.Api.SendMessageUploadRoundAction) {
            update.action;
            this.action = 'uploadRound';
            this.progress = update.action.progress;
        }
        if (update.action instanceof telegram_1.Api.SpeakingInGroupCallAction) {
            this.action = 'speakingInGroupCall';
        }
        if (update.action instanceof telegram_1.Api.SendMessageHistoryImportAction) {
            update.action;
            this.action = 'historyImport';
            this.progress = update.action.progress;
        }
        if (update.action instanceof telegram_1.Api.SendMessageChooseStickerAction) {
            update.action;
            this.action = 'chooseSticker';
        }
        if (update.action instanceof telegram_1.Api.SendMessageEmojiInteraction) {
            update.action;
            this.action = 'emojiInteraction';
            this.emoticon = update.action.emoticon;
            this.messageId = update.action.msgId;
            this.interaction = update.action.interaction;
        }
        if (update.action instanceof telegram_1.Api.SendMessageEmojiInteractionSeen) {
            this.action = 'emojiInteractionSeen';
            this.emoticon = update.action.emoticon;
        }
        return this;
    }
}
exports.UpdateUserTyping = UpdateUserTyping;
