"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaGame = void 0;
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://guthub.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
const telegram_1 = require("telegram");
const Medias = __importStar(require("./"));
class MediaGame extends Medias.Media {
    constructor() {
        super();
        this['_'] = 'game';
    }
    async encode(game, snakeClient) {
        snakeClient.log.debug('Creating MediaGame');
        this.snakeClient = snakeClient;
        const create = async (media) => {
            this.id = BigInt(String(media.id));
            this.accessHash = BigInt(String(media.accessHash));
            this.shortName = media.shortName;
            this.description = media.description;
            this.title = media.title;
            this.photo = new Medias.MediaPhoto();
            await this.photo.encode(media.photo, snakeClient);
            if (media.document) {
                if (media.document instanceof telegram_1.Api.Document) {
                    let document = media.document;
                    let animatedIndex = document.attributes.findIndex((attribute) => Boolean(attribute instanceof telegram_1.Api.DocumentAttributeAnimated));
                    for (let attribute of document.attributes) {
                        // sticker
                        if (attribute instanceof telegram_1.Api.DocumentAttributeSticker) {
                            this.document = new Medias.MediaSticker();
                            await this.document.encode(document, snakeClient);
                            return this;
                        }
                        if (attribute instanceof telegram_1.Api.DocumentAttributeAudio) {
                            attribute;
                            // voice
                            if (attribute.voice) {
                                this.document = new Medias.MediaVoice();
                                await this.document.encode(document, snakeClient);
                                return this;
                            }
                            // audio
                            this.document = new Medias.MediaAudio();
                            await this.document.encode(document, snakeClient);
                            return this;
                        }
                        if (attribute instanceof telegram_1.Api.DocumentAttributeVideo && animatedIndex < 0) {
                            attribute;
                            // video note
                            if (attribute.roundMessage) {
                                this.document = new Medias.MediaVideoNote();
                                await this.document.encode(document, snakeClient);
                                return this;
                            }
                            // video
                            this.document = new Medias.MediaVideo();
                            await this.document.encode(document, snakeClient);
                            return this;
                        }
                        // gif
                        if (attribute instanceof telegram_1.Api.DocumentAttributeAnimated) {
                            this.document = new Medias.MediaAnimation();
                            await this.document.encode(document, snakeClient);
                            return this;
                        }
                    }
                    // document
                    this.document = new Medias.MediaDocument();
                    await this.document.encode(document, snakeClient);
                    return this;
                }
            }
            return this;
        };
        if (game instanceof telegram_1.Api.MessageMediaGame) {
            return create(game.game);
        }
        return create(game);
    }
}
exports.MediaGame = MediaGame;
