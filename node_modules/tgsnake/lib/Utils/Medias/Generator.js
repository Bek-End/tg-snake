"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenerateMedia = void 0;
const Medias = __importStar(require("./"));
const telegram_1 = require("telegram");
async function GenerateMedia(media, snakeClient) {
    snakeClient.log.debug('Creating Media');
    // webpage
    if (media instanceof telegram_1.Api.MessageMediaWebPage) {
        media;
        let webpage = new Medias.MediaWebPage();
        await webpage.encode(media.webpage, snakeClient);
        return webpage;
    }
    // invoice
    if (media instanceof telegram_1.Api.MessageMediaInvoice) {
        media;
        let invoice = new Medias.MediaInvoice();
        await invoice.encode(media, snakeClient);
        return invoice;
    }
    // venue
    if (media instanceof telegram_1.Api.MessageMediaVenue) {
        media;
        let venue = new Medias.MediaVenue();
        await venue.encode(media, snakeClient);
        return venue;
    }
    // Photo
    if (media instanceof telegram_1.Api.MessageMediaPhoto) {
        media;
        let photo = new Medias.MediaPhoto();
        await photo.encode(media, snakeClient);
        return photo;
    }
    // Location
    if (media instanceof telegram_1.Api.MessageMediaGeo) {
        media;
        let location = new Medias.MediaLocation();
        await location.encode(media, snakeClient);
        return location;
    }
    // Dice
    if (media instanceof telegram_1.Api.MessageMediaDice) {
        let dice = new Medias.MediaDice();
        await dice.encode(media, snakeClient);
        return dice;
    }
    // Contact
    if (media instanceof telegram_1.Api.MessageMediaContact) {
        media;
        let contact = new Medias.MediaContact();
        await contact.encode(media, snakeClient);
        return contact;
    }
    // Polling
    if (media instanceof telegram_1.Api.MessageMediaPoll) {
        media;
        let poll = new Medias.MediaPoll();
        await poll.encode(media, snakeClient);
        return poll;
    }
    // Document
    if (media instanceof telegram_1.Api.MessageMediaDocument) {
        if (media.document instanceof telegram_1.Api.Document) {
            let document = media.document;
            let animatedIndex = document.attributes.findIndex((attribute) => Boolean(attribute instanceof telegram_1.Api.DocumentAttributeAnimated));
            for (let attribute of document.attributes) {
                // sticker
                if (attribute instanceof telegram_1.Api.DocumentAttributeSticker) {
                    let sticker = new Medias.MediaSticker();
                    await sticker.encode(document, snakeClient);
                    return sticker;
                }
                if (attribute instanceof telegram_1.Api.DocumentAttributeAudio) {
                    attribute;
                    // voice
                    if (attribute.voice) {
                        let voice = new Medias.MediaVoice();
                        await voice.encode(document, snakeClient);
                        return voice;
                    }
                    // audio
                    let audio = new Medias.MediaAudio();
                    await audio.encode(document, snakeClient);
                    return audio;
                }
                if (attribute instanceof telegram_1.Api.DocumentAttributeVideo && animatedIndex < 0) {
                    attribute;
                    // video note
                    if (attribute.roundMessage) {
                        let videoNote = new Medias.MediaVideoNote();
                        await videoNote.encode(document, snakeClient);
                        return videoNote;
                    }
                    // video
                    let video = new Medias.MediaVideo();
                    await video.encode(document, snakeClient);
                    return video;
                }
                // gif
                if (attribute instanceof telegram_1.Api.DocumentAttributeAnimated) {
                    let animation = new Medias.MediaAnimation();
                    await animation.encode(document, snakeClient);
                    return animation;
                }
            }
            // document
            let documents = new Medias.MediaDocument();
            await documents.encode(document, snakeClient);
            return documents;
        }
    }
    // Game
    if (media instanceof telegram_1.Api.MessageMediaGame) {
        media;
        let game = new Medias.MediaGame();
        await game.encode(media, snakeClient);
        return game;
    }
    return new Medias.Media();
}
exports.GenerateMedia = GenerateMedia;
