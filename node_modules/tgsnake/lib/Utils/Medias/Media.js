"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Media = void 0;
const util_1 = require("util");
const CleanObject_1 = require("../CleanObject");
const tg_file_id_1 = require("tg-file-id");
const Error_1 = __importDefault(require("../../Context/Error"));
class Media {
    constructor() {
        this.date = Math.floor(Date.now() / 1000);
    }
    get snakeClient() {
        return this._SnakeClient;
    }
    get SnakeClient() {
        return this._SnakeClient;
    }
    set snakeClient(client) {
        this._SnakeClient = client;
    }
    set SnakeClient(client) {
        this._SnakeClient = client;
    }
    decode(fileId) {
        //@ts-ignore
        let file = fileId !== null && fileId !== void 0 ? fileId : this.fileId;
        if (!file)
            throw new Error_1.default(`FileId not found!`, 'Media.decode', '');
        return (0, tg_file_id_1.decodeFileId)(String(file));
    }
    /** @hidden */
    [util_1.inspect.custom]() {
        return (0, CleanObject_1.betterConsoleLog)(this);
    }
    /** @hidden */
    toJSON() {
        let obj = (0, CleanObject_1.betterConsoleLog)(this);
        for (let [key, value] of Object.entries(obj)) {
            if (typeof value == 'bigint')
                obj[key] = String(value);
        }
        return obj;
    }
}
exports.Media = Media;
