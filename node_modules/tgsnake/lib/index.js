"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GramJs = exports.Utils = exports.Updates = exports.Telegram = exports.Interface = exports.Events = exports.Context = exports.Client = exports.BotError = exports.Composer = exports.Snake = void 0;
// Tgsnake - Telegram MTProto framework developed based on gram.js.
// Copyright (C) 2022 Butthx <https://github.com/butthx>
//
// This file is part of Tgsnake
//
// Tgsnake is a free software : you can redistribute it and/or modify
//  it under the terms of the MIT License as published.
const Error_1 = __importDefault(require("./Context/Error"));
exports.BotError = Error_1.default;
var Client_1 = require("./Client");
Object.defineProperty(exports, "Snake", { enumerable: true, get: function () { return Client_1.Snake; } });
var Composer_1 = require("./Context/Composer");
Object.defineProperty(exports, "Composer", { enumerable: true, get: function () { return Composer_1.Composer; } });
exports.Client = __importStar(require("./Client"));
exports.Context = __importStar(require("./Context"));
exports.Events = __importStar(require("./Events"));
exports.Interface = __importStar(require("./Interface"));
exports.Telegram = __importStar(require("./Telegram"));
exports.Updates = __importStar(require("./Update"));
exports.Utils = __importStar(require("./Utils"));
exports.GramJs = __importStar(require("telegram"));
